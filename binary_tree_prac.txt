def lUtil(node,level,max_level):
    if node is None:
            return
    if max_level[0] < level:
            print(node.data)
            max_level[0] = level
    lUtil(node.left,level+1,max_level)
    lUtil(node.right,level+1,max_level)	

def leftNode(node):
    max_level = [0]
    lUtil(node,1,max_level)


def rUtil(node,level,max_level):
    if node is None:
            return
    if max_level[0] < level:
            print(node.data)
            max_level[0] = level
    rUtil(node.right,level+1,max_level)
    rUtil(node.left,level+1,max_level)	

def rightNode(node):
    max_level = [0]
    rUtil(node,1,max_level)

	
def bUtil(node,level,max_level):
    if node is None:
            return
    if max_level[0] < level:
            #print(node.data)
            max_level[0] = level
    if rUtil(node.left,level+1,max_level): print(node.data)
    if rUtil(node.right,level+1,max_level): print(node.data)

def bottomNode(node):
    max_level = [0]
    rUtil(node,1,max_level)
